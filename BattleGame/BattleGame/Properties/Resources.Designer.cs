//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BattleGame.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BattleGame.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abilities Costs.
        /// </summary>
        internal static string abilityTextTitle {
            get {
                return ResourceManager.GetString("abilityTextTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to • Battle Board este este un  joc de tipul PvP (player vs player ) ce se înscrie prin construcție în sfera jocurilor de tip board game.
        ///
        ///• Tabla de joc este formată din 64 de căsuțe cu valori pozitive cât  și negative.
        ///• Tematica jocului o reprezintă lupta dintre foc și gheață astfel jucătorul din partea roșie deține valorile pozitive iar jucătorul din partea albastră le deține pe cele negative.
        ///
        ///• Fiecare jucător are la dispoziție 5 abilități prin care să cucerească tabla de joc. Fiecare abilitate ofer [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string aboutGameText {
            get {
                return ResourceManager.GetString("aboutGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to • În imaginea de mai sus sunt ilustrate cele 3 abilități Basic, în cazul de față sunt cele ale părții Red. In momentul în care folosim o abilitate valoarea căsuței de pe tabla de joc se modifică cu valoarea selectată. Deasupra fiecărei abilitate avem afișat costul acesteia. .
        /// </summary>
        internal static string basicAbilityText {
            get {
                return ResourceManager.GetString("basicAbilityText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blue Side.
        /// </summary>
        internal static string blueSide {
            get {
                return ResourceManager.GetString("blueSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player&apos;s Name.
        /// </summary>
        internal static string blueSideLbl {
            get {
                return ResourceManager.GetString("blueSideLbl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -2/area.
        /// </summary>
        internal static string blueSpecialAbility2Text {
            get {
                return ResourceManager.GetString("blueSpecialAbility2Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -3/area.
        /// </summary>
        internal static string blueSpecialAbilityText {
            get {
                return ResourceManager.GetString("blueSpecialAbilityText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to °C.
        /// </summary>
        internal static string celsiusSign {
            get {
                return ResourceManager.GetString("celsiusSign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Energy Types.
        /// </summary>
        internal static string energyTypeLbl {
            get {
                return ResourceManager.GetString("energyTypeLbl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to enter the battle both player&apos;s must choose their names !.
        /// </summary>
        internal static string entryGameWindowMessage {
            get {
                return ResourceManager.GetString("entryGameWindowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        internal static string extraBtnTxt {
            get {
                return ResourceManager.GetString("extraBtnTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Universitatea din Oradea
        ///Facultatea de Științe
        ///Domeniul Informatică
        ///Specializarea Informatică
        ///Licență
        ///
        ///Aplicația este asociată cu lucrarea de licență
        ///a absolventului Bocioc Gabriel Laurian
        ///
        ///Titlul lucrării
        ///Aplicație vizuală în .NET
        ///     (Battle Board)
        ///
        ///Coordonator Științific
        ///Lect. univ. dr. Laslo Eugen
        ///
        ///            Oradea
        ///              2019
        ///.
        /// </summary>
        internal static string extraPageTxt {
            get {
                return ResourceManager.GetString("extraPageTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to • Jocul se poate termina în 2 moduri. În primul caz unul dintre jucători ajunge la &quot;temperatura necesară(scor &gt;=42 pentru Red,  -42 pentru Blue). Al doilea caz se evaluează scorul după ce toate căsutele/pătrătelele de pe tabla de joc au fost cucerite. .
        /// </summary>
        internal static string finalCasesText {
            get {
                return ResourceManager.GetString("finalCasesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Game Difficulty.
        /// </summary>
        internal static string gameDifficultyText {
            get {
                return ResourceManager.GetString("gameDifficultyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Battle Board.
        /// </summary>
        internal static string gameTitle {
            get {
                return ResourceManager.GetString("gameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effect: -10.
        /// </summary>
        internal static string highBlueEffect {
            get {
                return ResourceManager.GetString("highBlueEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effect: +10.
        /// </summary>
        internal static string highRedEffect {
            get {
                return ResourceManager.GetString("highRedEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructions.
        /// </summary>
        internal static string instrBtnText {
            get {
                return ResourceManager.GetString("instrBtnText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lobby.
        /// </summary>
        internal static string lobbyBtnText {
            get {
                return ResourceManager.GetString("lobbyBtnText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effect: - 2.
        /// </summary>
        internal static string lowBlueEffect {
            get {
                return ResourceManager.GetString("lowBlueEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effect: + 2.
        /// </summary>
        internal static string lowRedEffect {
            get {
                return ResourceManager.GetString("lowRedEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effect: - 5.
        /// </summary>
        internal static string medBlueEffect {
            get {
                return ResourceManager.GetString("medBlueEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effect: + 5.
        /// </summary>
        internal static string medRedEffect {
            get {
                return ResourceManager.GetString("medRedEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pass Turn.
        /// </summary>
        internal static string passTurnBtnText {
            get {
                return ResourceManager.GetString("passTurnBtnText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Red Side.
        /// </summary>
        internal static string redSide {
            get {
                return ResourceManager.GetString("redSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player&apos;s Name.
        /// </summary>
        internal static string redSideLbl {
            get {
                return ResourceManager.GetString("redSideLbl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to +2/area.
        /// </summary>
        internal static string redSpecialAbility2Text {
            get {
                return ResourceManager.GetString("redSpecialAbility2Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to +3/area.
        /// </summary>
        internal static string redSpecialAbilityText {
            get {
                return ResourceManager.GetString("redSpecialAbilityText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Game.
        /// </summary>
        internal static string resetBtnText {
            get {
                return ResourceManager.GetString("resetBtnText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Score:.
        /// </summary>
        internal static string scoreLbl {
            get {
                return ResourceManager.GetString("scoreLbl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to • Pătratul cu bordura galbenă reprezintă căsuța selectată din tabla de joc , iar căsuțele roșii/albastre reprezintă pătratele ce-și vor modifica valoare în functie de jucător.(Ex. in tura lui Red toate pătratele roșii vor primi valoarea +2).
        ///• La fel funcționeaza și pentru Blue doar că va primi valoarea -2..
        /// </summary>
        internal static string special1Text {
            get {
                return ResourceManager.GetString("special1Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to • Pătratul cu bordura galbenă reprezintă căsuța selectată din tabla de joc , iar căsuțele roșii/albastre reprezintă pătratele ce-și vor modifica valoare în functie de jucător.(Ex. in tura lui Red toate pătratele roșii vor primi valoarea +3).
        ///• Extra-Dacă pătratul cu bordura galbenă are o valoarea pozitivă Red va mai primi +3..
        /// </summary>
        internal static string special2Text {
            get {
                return ResourceManager.GetString("special2Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Battle.
        /// </summary>
        internal static string startBtnText {
            get {
                return ResourceManager.GetString("startBtnText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Surrender.
        /// </summary>
        internal static string surrenderBtnText {
            get {
                return ResourceManager.GetString("surrenderBtnText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;s Turn.
        /// </summary>
        internal static string turnLblStr {
            get {
                return ResourceManager.GetString("turnLblStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to • La începutul fiecărei ture jucătorul va primi o energie din cele 3 energii disponibile. Energii sunt de 3 tipuri High (HE), Medium (ME) și Low (LE). Probabilitatea obținerii acestora diferă astfel că cele High vor avea o rată de obținere mai mică.
        ///
        ///• In functie de decizia jucătorului se poate alege să  se folosească această energie pe o abilitate sau poate alege să nu facă nimic ( prin butonul Pass Turn).
        ///
        ///• In momentul in care se foloseste o abilitate se va pierde energia folosită.
        ///
        ///• Tura se termi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string turnPhasesText {
            get {
                return ResourceManager.GetString("turnPhasesText", resourceCulture);
            }
        }
    }
}
